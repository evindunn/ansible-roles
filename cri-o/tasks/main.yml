- name: Make sure lvm2 is installed
  package:
    name: lvm2
    state: latest

- name: Copy kernel config
  template:
    src: crio-modules.conf
    dest: /etc/modules-load.d/crio.conf

- name: Load kernel modules
  modprobe:
    name: "{{ item }}"
  loop: "{{ crio_kernel_modules }}"

- name: Configure sysctl
  sysctl:
    name: "{{ item }}"
    value: "1"
    reload: yes
    sysctl_set: yes
    sysctl_file: /etc/sysctl.d/99-crio.conf
  loop: "{{ crio_sysctl_keys }}"

- name: Query disks
  shell: lsblk --json
  register: all_disks
  changed_when: False

- name: Get available disks
  set_fact:
    avail_disks: "{{ all_disks.stdout | from_json | json_query('blockdevices[?type == `disk` && !children]') }}"

- name: Create a partitions for pvs
  parted:
    device: "/dev/{{ item.name }}"
    number: 1
    state: present
  loop: "{{ avail_disks }}"
  register: created_partition_disks

- name: Get created partitions
  set_fact:
    created_partitions: "{{ item }}1"
  loop: "{{ created_partition_disks.results | json_query('[*].disk.dev') }}"

- name: Create a data volume group
  lvg:
    vg: "vg_{{ ansible_hostname }}"
    pvs: "{{ created_partitions }}"
  when: created_partitions is defined
  register: created_volume_group

- name: Create a logical vol for cri-o
  lvol:
    lv: lv_crio
    vg: "vg_{{ ansible_hostname }}"
    size: 8G
  when: created_volume_group.changed

- name: Set the cri-o volume path
  set_fact:
    crio_volume: "/dev/mapper/vg_{{ ansible_hostname }}-lv_crio"

- name: Format the cri-o volume
  filesystem:
    dev: "{{ crio_volume }}"
    fstype: ext4
  when: created_volume_group.changed

- name: Mount the cri-o volume
  mount:
    src: "{{ crio_volume }}" 
    path: /var/lib/containers/storage # cri-o default
    state: mounted
    fstype: ext4
    opts: noatime
  when: created_volume_group.changed

- name: Set cri-o OS version
  set_fact:
    crio_os: "x{{ ansible_distribution }}_{{ ansible_distribution_version }}"

- name: Configure cri-o repos
  template:
    src: crio-repos.list
    dest: /etc/apt/sources.list.d/crio.list

- name: Add cri-o apt keys
  apt_key:
    url: "{{ item }}"
  loop:
    - https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ crio_os }}/Release.key
    - https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ crio_version }}/{{ crio_os }}/Release.key

- name: Install cri-o
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  loop:
    - cri-o
    - cri-o-runc

- name: Make sure cri-o is started/enabled
  service:
    name: crio
    state: started
    enabled: yes
