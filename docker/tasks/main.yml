---

- name: include os-specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- name: install dependencies
  package:
    name: "{{ docker_deps }}"
    state: present

- name: Include OS-specific tasks
  include_tasks: "{{ ansible_os_family }}.yml"

- name: Install docker
  package:
    name: "{{ docker_pkgs }}"
    state: present

- name: Prevent docker upgrades (Ubuntu)
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop: "{{ docker_pkgs }}"
  when: ansible_os_family == "Debian"

- block:
  - name: Make sure dnf versionlock is installed
    package:
      name: dnf-command(versionlock)
      state: present

  - name: Prevent docker upgrades (RedHat)
    shell: "dnf versionlock add {{ item }}"
    loop: "{{ docker_pkgs }}"
    changed_when: false

  when: ansible_os_family == "RedHat"

- name: make sure the docker config directory exists
  file:
    path: /etc/docker/
    state: directory

- name: configure the docker daemon
  template:
    src: docker.daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: '0644'
  notify: enable/restart docker

- name: create docker service directory
  file:
    path: /etc/systemd/system/docker.service.d/
    state: directory

- name: configure mount flags
  template:
    src: systemd-mount-flags.conf.j2
    dest: /etc/systemd/system/docker.service.d/mount-flags.conf
  register: mount_flags

- name: reload the docker daemon
  service:
    name: docker
    enabled: yes
    state: reloaded
  when: mount_flags.changed

- name: enable the docker daemon
  service:
    name: docker
    enabled: yes
    state: started

- name: add users to docker group
  ansible.builtin.user:
    name: "{{ item }}"
    groups: docker
    append: True
  loop: "{{ docker_users }}"
